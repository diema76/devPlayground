# This is a basic workflow to help you get started with Actions
name: CI verso ambiente DEV

on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "devInt" ]
  pull_request:
    branches: [ "devInt" ]

jobs:
  test:
    name: Test section
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: echo "🐧 GitHub Action running on ${{ runner.os }}"
    - run: echo "🔎 Retrieving ${{ github.ref }} from ${{ github.repository }}."
    - run: npm install sfdx-cli -g 
    - uses: legetz/setup-pmd@v6.48
    - run: pmd -language apex --dir . --rulesets ./pmd-rules.xml -f text

  changed_files:
      runs-on: ubuntu-latest
      name: Test changed-files
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.
        # Example 1
        - name: Get changed files
          id: changed-files
          uses: tj-actions/changed-files@v37
  
          env:
            TESTCLASSLIST: null

        # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.
        - name: List all changed files
          run: |
            for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              if [[ $file =~ "_Test" ]]; then
                TESTCLASSLIST += "$file"
              fi
            done
            echo "cat TESTCLASSLIST"
            cat TESTCLASSLIST
            

  deployment:
    name: Deployment section
    runs-on: ubuntu-latest
    needs: [test]
    if: success() && contains('refs/heads/master', github.ref)
    steps:
    - uses: actions/checkout@v3
    - run: npm install sfdx-cli -g 
    - run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
    - run: sfdx force:auth:jwt:grant --client-id=${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file=server.key --username=${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --set-default-dev-hub --alias devjwt
    - run: sfdx force:source:deploy --manifest=manifest/package.xml --testlevel=RunLocalTests -u ${{ secrets.SALESFORCE_DEVHUB_USERNAME }}
  